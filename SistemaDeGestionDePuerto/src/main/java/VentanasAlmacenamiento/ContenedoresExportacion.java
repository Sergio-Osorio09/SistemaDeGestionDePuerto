package VentanasAlmacenamiento;

import Clases.CConexion;
import com.mycompany.sistemadegestiondepuerto.InterfazOperadorAlmacenamiento;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ContenedoresExportacion extends javax.swing.JFrame {

    CConexion con=new CConexion();
    Connection CConexion=con.estableceConexion();
    public ContenedoresExportacion() {
        initComponents();
         mostrardatos();
         mostrardatos1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Salir = new javax.swing.JButton();
        ActualizarValidar = new javax.swing.JPanel();
        Validar = new javax.swing.JComboBox<>();
        Actualizar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaContenedores = new javax.swing.JTable();
        IdContenedor = new javax.swing.JTextField();
        AsignarZona = new javax.swing.JComboBox<>();
        UbicacionContenedor = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        ActualizarZona = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaZona = new javax.swing.JTable();
        IdZona = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONTENEDOR DE EXPORTACIÓN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        ActualizarValidar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OPERACIONES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        Validar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Válido", "No Válido" }));
        Validar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Validar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        Validar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidarActionPerformed(evt);
            }
        });

        Actualizar.setText("Actualizar");
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LISTADO DE CONTENEDORES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        TablaContenedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaContenedores.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TablaContenedoresAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        TablaContenedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaContenedoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaContenedores);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        IdContenedor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("ID "), "ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        IdContenedor.setEnabled(false);

        AsignarZona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "200201", "200202", "200203", "200204", "200205", "200301", "200302", "200303", "200304", "200305" }));
        AsignarZona.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Asignar Zona", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        UbicacionContenedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ZonaDeSalida", "ZonaStandBy" }));
        UbicacionContenedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ubicación", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        javax.swing.GroupLayout ActualizarValidarLayout = new javax.swing.GroupLayout(ActualizarValidar);
        ActualizarValidar.setLayout(ActualizarValidarLayout);
        ActualizarValidarLayout.setHorizontalGroup(
            ActualizarValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActualizarValidarLayout.createSequentialGroup()
                .addGroup(ActualizarValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ActualizarValidarLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(ActualizarValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AsignarZona, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IdContenedor)
                            .addComponent(Validar, 0, 151, Short.MAX_VALUE)
                            .addComponent(UbicacionContenedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(ActualizarValidarLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(Actualizar)))
                .addGap(39, 39, 39)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ActualizarValidarLayout.setVerticalGroup(
            ActualizarValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ActualizarValidarLayout.createSequentialGroup()
                .addGroup(ActualizarValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ActualizarValidarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(IdContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Validar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UbicacionContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(AsignarZona, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(Actualizar)
                        .addGap(41, 41, 41))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ACTUALIZAR ZONA DE ALMACENAMIENTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        ActualizarZona.setText("Actualizar");
        ActualizarZona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarZonaActionPerformed(evt);
            }
        });

        TablaZona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaZona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaZonaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaZona);

        IdZona.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        IdZona.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(ActualizarZona))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(IdZona, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(IdZona, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(ActualizarZona)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ActualizarValidar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(Salir)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(ActualizarValidar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
      InterfazOperadorAlmacenamiento salir = new InterfazOperadorAlmacenamiento();
        salir.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SalirActionPerformed

    private void ValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValidarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValidarActionPerformed

    private void TablaContenedoresAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TablaContenedoresAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaContenedoresAncestorAdded

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
         try {
        PreparedStatement ps = CConexion.prepareStatement("UPDATE contenedor SET validezDeCarga=?, UbicacionContenedor=?, idZonaDeAlmacenamiento=? WHERE idContenedor=?");
        ps.setString(1, Validar.getSelectedItem().toString());
        ps.setString(2, UbicacionContenedor.getSelectedItem().toString());
        ps.setString(3, AsignarZona.getSelectedItem().toString());
        ps.setString(4, IdContenedor.getText());
        
        int indice = ps.executeUpdate();
        if (indice > 0) {
            JOptionPane.showMessageDialog(rootPane, "Datos Actualizados Correctamente");
            mostrardatos();
            limpiarentradasContenedor();
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila para actualizar");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al actualizar datos: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_ActualizarActionPerformed

    private void TablaContenedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaContenedoresMouseClicked
        Actualizar.setEnabled(true);
        int fila=this.TablaContenedores.getSelectedRow();
        this.IdContenedor.setText(this.TablaContenedores.getValueAt(fila, 0).toString());
        this.UbicacionContenedor.setSelectedItem(this.TablaContenedores.getValueAt(fila, 2).toString());
        this.Validar.setSelectedItem(this.TablaContenedores.getValueAt(fila, 3).toString());
        this.AsignarZona.setSelectedItem(this.TablaZona.getValueAt(fila, 6).toString());
    }//GEN-LAST:event_TablaContenedoresMouseClicked

    private void TablaZonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaZonaMouseClicked
        ActualizarZona.setEnabled(true);
        int fila=this.TablaZona.getSelectedRow();
        this.IdZona.setText(this.TablaZona.getValueAt(fila, 0).toString());   
    }//GEN-LAST:event_TablaZonaMouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        Actualizar.setEnabled(false);
        ActualizarZona.setEnabled(false);
        limpiarentradasContenedor();
        limpiarentradasZona();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void ActualizarZonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarZonaActionPerformed
       try {
        // Obtener el ID de la nueva zona de almacenamiento
        String idZonaNueva = AsignarZona.getSelectedItem().toString();
        
        // Obtener la cantidad actual de la zona de almacenamiento
        PreparedStatement psCantidadActual = CConexion.prepareStatement("SELECT cantidadActual FROM zonadealmacenamiento WHERE idZonaDeAlmacenamiento=?");
        psCantidadActual.setString(1, idZonaNueva);
        ResultSet rsCantidadActual = psCantidadActual.executeQuery();
        int cantidadActual = 0;
        if (rsCantidadActual.next()) {
            cantidadActual = rsCantidadActual.getInt("cantidadActual");
        }
        
        // Aumentar la cantidad actual en 1
        cantidadActual++;

        // Actualizar la cantidad actual en la base de datos
        PreparedStatement psAumentar = CConexion.prepareStatement("UPDATE zonadealmacenamiento SET cantidadActual = ? WHERE idZonaDeAlmacenamiento=?");
        psAumentar.setInt(1, cantidadActual);
        psAumentar.setString(2, idZonaNueva);
        
        int indice = psAumentar.executeUpdate();
        if (indice > 0) {
            JOptionPane.showMessageDialog(rootPane, "Datos Actualizados Correctamente");
            mostrardatos1();
            limpiarentradasContenedor();
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila para actualizar");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al actualizar datos: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_ActualizarZonaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContenedoresExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContenedoresExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContenedoresExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContenedoresExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContenedoresExportacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizar;
    private javax.swing.JPanel ActualizarValidar;
    private javax.swing.JButton ActualizarZona;
    private javax.swing.JComboBox<String> AsignarZona;
    private javax.swing.JTextField IdContenedor;
    private javax.swing.JTextField IdZona;
    private javax.swing.JButton Salir;
    private javax.swing.JTable TablaContenedores;
    private javax.swing.JTable TablaZona;
    private javax.swing.JComboBox<String> UbicacionContenedor;
    private javax.swing.JComboBox<String> Validar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
   
    private void mostrardatos() {
        DefaultTableModel modelo=new DefaultTableModel();
        modelo.addColumn("idContenedor");
        modelo.addColumn("TipoDeCarga");
        modelo.addColumn("UbicacionContenedor");
        modelo.addColumn("ValidezDeCarga");
        modelo.addColumn("DestinoContenedor");
        modelo.addColumn("propietarioContenedor");
        modelo.addColumn("idZonaDeAlmacenamiento");
        TablaContenedores.setModel(modelo);
        String consultasql="select * from contenedor WHERE DestinoContenedor != 'Peru'";
        String data[]=new String[7];
        
        Statement st;
        try{
            st=CConexion.createStatement();
            ResultSet rs=st.executeQuery(consultasql);
            while(rs.next()){
                data[0]=rs.getString(1);
                data[1]=rs.getString(2);
                data[2]=rs.getString(3);
                data[3]=rs.getString(4);
                data[4]=rs.getString(5);
                data[5]=rs.getString(6);
                data[6]=rs.getString(7);
                modelo.addRow(data);
            }
        } catch(SQLException e){
            System.out.println("Error al mostrar Datos "+ e);
        }
    }
    private void limpiarentradasContenedor() {
        Validar.setSelectedIndex(0);
        IdContenedor.setText("");  
    }
   
    private void mostrardatos1() {
        DefaultTableModel modelo=new DefaultTableModel();
        modelo.addColumn("idZonaDeAlmacenamiento");
        modelo.addColumn("nombreZonaDeAlmacenamiento");
        modelo.addColumn("TipoDeCarga");
        modelo.addColumn("CapacidadMaxima");
        modelo.addColumn("CantidadActual");
        TablaZona.setModel(modelo);
        String consultasql = "SELECT * FROM zonadealmacenamiento WHERE nombreZonaDeAlmacenamiento != 'ZonaDeEntrada' ";
        String data[]=new String[5];
        
        Statement st;
        try{
            st=CConexion.createStatement();
            ResultSet rs=st.executeQuery(consultasql);
            while(rs.next()){
                data[0]=rs.getString(1);
                data[1]=rs.getString(2);
                data[2]=rs.getString(3);
                data[3]=rs.getString(4);
                data[4]=rs.getString(5);
                modelo.addRow(data);
            }
        } catch(SQLException e){
            System.out.println("Error al mostrar Datos "+ e);
        }
    }
    
    private void limpiarentradasZona() {
        IdZona.setText("");  
    }
  
}
