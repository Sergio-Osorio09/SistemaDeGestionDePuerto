/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VentanasEmbarque;

import Clases.CConexion;
import com.mycompany.sistemadegestiondepuerto.InterfazOperadorEmbarque;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class EmbarcarContenedorBarco extends javax.swing.JFrame {
    CConexion con=new CConexion();
    Connection CConexion=con.estableceConexion();
    /**
     * Creates new form EmbarcarContenedorBarco
     */
    public EmbarcarContenedorBarco() {
        initComponents();
        mostrardatos();
        mostrardatosBarcos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelPrincipal = new javax.swing.JPanel();
        PanelEmbarque = new javax.swing.JPanel();
        txtIDContenedor = new javax.swing.JTextField();
        txtTipoDeCarga = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        txtPropietario = new javax.swing.JTextField();
        txtIDBarco = new javax.swing.JTextField();
        BotonActualizarAsignacion = new javax.swing.JButton();
        BotonVolverMenu = new javax.swing.JButton();
        PanelContenedoresExportacion = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaContenedoresExportacion = new javax.swing.JTable();
        PanelBarcos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaBarcos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EMBARCAR CONTENEDORES DE EXPORTACIÓN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N

        PanelEmbarque.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EMBARQUE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N

        txtIDContenedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID Contenedor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        txtIDContenedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDContenedorActionPerformed(evt);
            }
        });

        txtTipoDeCarga.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo de Carga", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        txtDestino.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Destino", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        txtPropietario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Propietario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        txtIDBarco.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID Barco", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        BotonActualizarAsignacion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BotonActualizarAsignacion.setText("Actualizar");
        BotonActualizarAsignacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActualizarAsignacionActionPerformed(evt);
            }
        });

        BotonVolverMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BotonVolverMenu.setText("Volver al Menu");
        BotonVolverMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEmbarqueLayout = new javax.swing.GroupLayout(PanelEmbarque);
        PanelEmbarque.setLayout(PanelEmbarqueLayout);
        PanelEmbarqueLayout.setHorizontalGroup(
            PanelEmbarqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEmbarqueLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(PanelEmbarqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonActualizarAsignacion, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDBarco, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelEmbarqueLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(BotonVolverMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipoDeCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        PanelEmbarqueLayout.setVerticalGroup(
            PanelEmbarqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEmbarqueLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtIDContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTipoDeCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtIDBarco, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(BotonActualizarAsignacion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BotonVolverMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelContenedoresExportacion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONTENEDORES EXPORTACIÓN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N

        TablaContenedoresExportacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaContenedoresExportacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaContenedoresExportacionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaContenedoresExportacion);

        javax.swing.GroupLayout PanelContenedoresExportacionLayout = new javax.swing.GroupLayout(PanelContenedoresExportacion);
        PanelContenedoresExportacion.setLayout(PanelContenedoresExportacionLayout);
        PanelContenedoresExportacionLayout.setHorizontalGroup(
            PanelContenedoresExportacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelContenedoresExportacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        PanelContenedoresExportacionLayout.setVerticalGroup(
            PanelContenedoresExportacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelContenedoresExportacionLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        PanelBarcos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LISTA DE BARCOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        PanelBarcos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PanelBarcosMouseClicked(evt);
            }
        });

        TablaBarcos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TablaBarcos);

        javax.swing.GroupLayout PanelBarcosLayout = new javax.swing.GroupLayout(PanelBarcos);
        PanelBarcos.setLayout(PanelBarcosLayout);
        PanelBarcosLayout.setHorizontalGroup(
            PanelBarcosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBarcosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelBarcosLayout.setVerticalGroup(
            PanelBarcosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBarcosLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelContenedoresExportacion, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PanelBarcos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(PanelEmbarque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(PanelEmbarque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelPrincipalLayout.createSequentialGroup()
                        .addComponent(PanelContenedoresExportacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PanelBarcos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonVolverMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverMenuActionPerformed
        InterfazOperadorEmbarque embarque = new InterfazOperadorEmbarque();
        embarque.setLocationRelativeTo(null);
        embarque.setSize(590,490);
        embarque.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BotonVolverMenuActionPerformed

    private void txtIDContenedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDContenedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDContenedorActionPerformed

    private void TablaContenedoresExportacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaContenedoresExportacionMouseClicked
        int fila = this.TablaContenedoresExportacion.getSelectedRow();
        this.txtIDContenedor.setText(this.TablaContenedoresExportacion.getValueAt(fila, 0).toString());
        this.txtTipoDeCarga.setText(this.TablaContenedoresExportacion.getValueAt(fila, 1).toString());
        this.txtDestino.setText(this.TablaContenedoresExportacion.getValueAt(fila, 2).toString());
        this.txtPropietario.setText(this.TablaContenedoresExportacion.getValueAt(fila, 3).toString());
        this.txtIDBarco.setText(this.TablaContenedoresExportacion.getValueAt(fila, 4).toString());
    }//GEN-LAST:event_TablaContenedoresExportacionMouseClicked

    private void PanelBarcosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PanelBarcosMouseClicked
        int fila = this.TablaBarcos.getSelectedRow();
    }//GEN-LAST:event_PanelBarcosMouseClicked

    private void BotonActualizarAsignacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActualizarAsignacionActionPerformed
        try{
            PreparedStatement ps=CConexion.prepareStatement
            ("Update contenedor set propietarioContenedor='"+txtPropietario.getText()+"',idBarco='"+txtIDBarco.getText()+"' where idContenedor='"+txtIDContenedor.getText()+"'");
            int indice=ps.executeUpdate();

            if(indice>0){
                JOptionPane.showMessageDialog(rootPane, "Datos Actualizados Correctamente");
                mostrardatos();
                limpiarentradas();
            }else{
                JOptionPane.showMessageDialog(null, "No selecciono Fila");
            }
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Error al actualizar datos"+e);
        }
    }//GEN-LAST:event_BotonActualizarAsignacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmbarcarContenedorBarco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmbarcarContenedorBarco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmbarcarContenedorBarco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmbarcarContenedorBarco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmbarcarContenedorBarco().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonActualizarAsignacion;
    private javax.swing.JButton BotonVolverMenu;
    private javax.swing.JPanel PanelBarcos;
    private javax.swing.JPanel PanelContenedoresExportacion;
    private javax.swing.JPanel PanelEmbarque;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JTable TablaBarcos;
    private javax.swing.JTable TablaContenedoresExportacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtIDBarco;
    private javax.swing.JTextField txtIDContenedor;
    private javax.swing.JTextField txtPropietario;
    private javax.swing.JTextField txtTipoDeCarga;
    // End of variables declaration//GEN-END:variables
    private void mostrardatos() {
        DefaultTableModel modelo=new DefaultTableModel();
        modelo.addColumn("ID CONTENEDOR");
        modelo.addColumn("TIPO DE CARGA");
        modelo.addColumn("DESTINO");
        modelo.addColumn("PROPIETARIO");
        modelo.addColumn("ID BARCO");
        TablaContenedoresExportacion.setModel(modelo);
        String consultasql="select * from contenedor where DestinoContenedor!='Peru'";
        String data[]=new String[6];
        
        Statement st;
        try{
            st=CConexion.createStatement();
            ResultSet rs=st.executeQuery(consultasql);
            while(rs.next()){
                data[0]=rs.getString(1);
                data[1]=rs.getString(2);
                data[2]=rs.getString(5);
                data[3]=rs.getString(6);
                data[4]=rs.getString(9);
                modelo.addRow(data);
            }
        } catch(SQLException e){
            System.out.println("Error al mostrar Datos "+ e);
        }
    }
    
    private void mostrardatosBarcos() {
        DefaultTableModel modelo=new DefaultTableModel();
        modelo.addColumn("ID BARCO");
        modelo.addColumn("DESTINO");
        modelo.addColumn("OPERACIONES BARCO");
        modelo.addColumn("ID MUELLE");
        TablaBarcos.setModel(modelo);
        String consultasql="select * from barco where DestinoBarco<>'Peru' and OperacionesBarco='Aprobado'";
        String data[]=new String[5];
        
        Statement st;
        try{
            st=CConexion.createStatement();
            ResultSet rs=st.executeQuery(consultasql);
            while(rs.next()){
                data[0]=rs.getString(1);
                data[1]=rs.getString(2);
                data[2]=rs.getString(5);
                data[3]=rs.getString(6);
                modelo.addRow(data);
            }
        } catch(SQLException e){
            System.out.println("Error al mostrar Datos "+ e);
        }
    }
    
    private void limpiarentradas() {
        txtIDBarco.setText("");
        txtTipoDeCarga.setText("");
        txtDestino.setText("");
        txtPropietario.setText("");
        txtIDBarco.setText("");
        txtIDContenedor.setText("");
    }
}
