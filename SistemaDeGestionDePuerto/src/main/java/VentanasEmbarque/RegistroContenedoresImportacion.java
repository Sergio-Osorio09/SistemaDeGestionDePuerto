/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VentanasEmbarque;

import Clases.CConexion;
import com.mycompany.sistemadegestiondepuerto.InterfazOperadorEmbarque;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class RegistroContenedoresImportacion extends javax.swing.JFrame {
    CConexion con=new CConexion();
    Connection CConexion=con.estableceConexion();
    /**
     * Creates new form RegistroContenedoresImportacion
     */
    public RegistroContenedoresImportacion() {
        initComponents();
        mostrardatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        PanelPrincipal = new javax.swing.JPanel();
        PanelRegistros = new javax.swing.JPanel();
        txtIDContenedor = new javax.swing.JTextField();
        selectDestino = new javax.swing.JComboBox<>();
        txtPropietario = new javax.swing.JTextField();
        selectTipoDeCarga = new javax.swing.JComboBox<>();
        BotonRegistrarContenedor = new javax.swing.JButton();
        BotonActualizarContenedor = new javax.swing.JButton();
        PanelContenedoresImportacion = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaContenedoresImportacion = new javax.swing.JTable();
        BotonVolverAlMenu = new javax.swing.JButton();

        jMenuItem1.setText("Eliminar");
        jMenuItem1.setComponentPopupMenu(jPopupMenu1);
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "REGISTRAR CONTENEDORES DE IMPORTACIÓN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N

        PanelRegistros.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "REGISTRO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        PanelRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PanelRegistrosMouseClicked(evt);
            }
        });

        txtIDContenedor.setBorder(javax.swing.BorderFactory.createTitledBorder("ID Contenedor"));

        selectDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Perú" }));
        selectDestino.setBorder(javax.swing.BorderFactory.createTitledBorder("Destino"));

        txtPropietario.setBorder(javax.swing.BorderFactory.createTitledBorder("Propietario"));

        selectTipoDeCarga.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ProductosCongelados", "ProductosSinCongelar", "ProductosQuimicos", "ProductosGranel", "ProductosGenericos" }));
        selectTipoDeCarga.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de Carga"));

        BotonRegistrarContenedor.setText("Registrar ");
        BotonRegistrarContenedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegistrarContenedorActionPerformed(evt);
            }
        });

        BotonActualizarContenedor.setText("Actualizar");
        BotonActualizarContenedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActualizarContenedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelRegistrosLayout = new javax.swing.GroupLayout(PanelRegistros);
        PanelRegistros.setLayout(PanelRegistrosLayout);
        PanelRegistrosLayout.setHorizontalGroup(
            PanelRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistrosLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(PanelRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(BotonActualizarContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectDestino, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonRegistrarContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectTipoDeCarga, javax.swing.GroupLayout.Alignment.LEADING, 0, 171, Short.MAX_VALUE)
                    .addComponent(txtIDContenedor, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPropietario, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        PanelRegistrosLayout.setVerticalGroup(
            PanelRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtIDContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selectDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selectTipoDeCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonRegistrarContenedor)
                .addGap(18, 18, 18)
                .addComponent(BotonActualizarContenedor)
                .addGap(33, 33, 33))
        );

        PanelContenedoresImportacion.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "CONTENEDORES IMPORTACIÓN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        PanelContenedoresImportacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PanelContenedoresImportacionMouseClicked(evt);
            }
        });

        TablaContenedoresImportacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaContenedoresImportacion.setComponentPopupMenu(jPopupMenu1);
        TablaContenedoresImportacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaContenedoresImportacionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaContenedoresImportacion);

        javax.swing.GroupLayout PanelContenedoresImportacionLayout = new javax.swing.GroupLayout(PanelContenedoresImportacion);
        PanelContenedoresImportacion.setLayout(PanelContenedoresImportacionLayout);
        PanelContenedoresImportacionLayout.setHorizontalGroup(
            PanelContenedoresImportacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelContenedoresImportacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelContenedoresImportacionLayout.setVerticalGroup(
            PanelContenedoresImportacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelContenedoresImportacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BotonVolverAlMenu.setText("Volver al Menu");
        BotonVolverAlMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverAlMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(PanelRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PanelContenedoresImportacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonVolverAlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(362, 362, 362))
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelContenedoresImportacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(BotonVolverAlMenu)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonRegistrarContenedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegistrarContenedorActionPerformed
        try{
            PreparedStatement ps=CConexion.prepareStatement("INSERT INTO contenedor(idContenedor,TipoDeCarga,DestinoContenedor,propietarioContenedor) VALUES(?,?,?,?)");
            ps.setString(1, txtIDContenedor.getText());
            ps.setString(2, selectTipoDeCarga.getSelectedItem().toString());            
            ps.setString(3, selectDestino.getSelectedItem().toString());
            ps.setString(4, txtPropietario.getText());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Datos Guardados Correctamente");
            mostrardatos();
            limpiarentradas();
            
        } catch(SQLException e){
            System.out.println("Error al registrar usuario"+ e);
        }
    }//GEN-LAST:event_BotonRegistrarContenedorActionPerformed

    private void BotonActualizarContenedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActualizarContenedorActionPerformed
        try{
            PreparedStatement ps=CConexion.prepareStatement
        ("Update contenedor set TipoDeCarga='"+selectTipoDeCarga.getSelectedItem()+"',DestinoContenedor='"+selectDestino.getSelectedItem()+"',propietarioContenedor='"+txtPropietario.getText()+"' where idContenedor='"+txtIDContenedor.getText()+"'");
            int indice=ps.executeUpdate();
            
            if(indice>0){
                JOptionPane.showMessageDialog(rootPane, "Datos Actualizados Correctamente");
                mostrardatos();
                limpiarentradas();
            }else{
                JOptionPane.showMessageDialog(null, "No selecciono Fila");
            }
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Error al actualizar datos"+e);
        }
    }//GEN-LAST:event_BotonActualizarContenedorActionPerformed

    private void TablaContenedoresImportacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaContenedoresImportacionMouseClicked
        BotonRegistrarContenedor.setEnabled(false);
        BotonActualizarContenedor.setEnabled(true);
        int fila=this.TablaContenedoresImportacion.getSelectedRow();
        this.selectTipoDeCarga.setSelectedItem(this.TablaContenedoresImportacion.getValueAt(fila, 1).toString());
        this.txtIDContenedor.setText(this.TablaContenedoresImportacion.getValueAt(fila, 0).toString());
        this.selectDestino.setSelectedItem(this.TablaContenedoresImportacion.getValueAt(fila, 2).toString());
        this.txtPropietario.setText(this.TablaContenedoresImportacion.getValueAt(fila, 3).toString());
    }//GEN-LAST:event_TablaContenedoresImportacionMouseClicked

    private void BotonVolverAlMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverAlMenuActionPerformed
        InterfazOperadorEmbarque embarque = new InterfazOperadorEmbarque();
        embarque.setLocationRelativeTo(null);
        embarque.setSize(590,490);
        embarque.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BotonVolverAlMenuActionPerformed

    private void PanelContenedoresImportacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PanelContenedoresImportacionMouseClicked
        BotonActualizarContenedor.setEnabled(false);
        BotonRegistrarContenedor.setEnabled(true);
        limpiarentradas();
    }//GEN-LAST:event_PanelContenedoresImportacionMouseClicked

    private void PanelRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PanelRegistrosMouseClicked
        BotonActualizarContenedor.setEnabled(false);
        BotonRegistrarContenedor.setEnabled(true);
        limpiarentradas();
    }//GEN-LAST:event_PanelRegistrosMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar el contenedor","Salir",JOptionPane.YES_NO_CANCEL_OPTION)==0){
            try{
                PreparedStatement ps=CConexion.prepareStatement("DELETE FROM contenedor where idContenedor='"+txtIDContenedor.getText()+"'");
            int indice=ps.executeUpdate();
            if(indice>0){
                mostrardatos();
            }else{
                System.out.println("No selecciono fila");
            }    
            }catch(SQLException e){
                System.out.println("Error al eliminar"+ e);
            }
        }
        /*if (JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el contenedor?", "Eliminar", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                Connection conexion = new CConexion().estableceConexion();
                if (conexion != null) {
                    String sql = "DELETE FROM contenedor WHERE idContenedor=?";
                    PreparedStatement ps = conexion.prepareStatement(sql);
                    ps.setString(1, txtIDContenedor.getText());

                    int indice = ps.executeUpdate();
                    if (indice > 0) {
                        mostrardatos();
                        JOptionPane.showMessageDialog(null, "Contenedor eliminado exitosamente");
                    } else {
                        System.out.println("No seleccionó una fila para eliminar");
                    }

                    conexion.close(); // Asegúrate de cerrar la conexión después de usarla
                } else {
                    System.out.println("Error: No se pudo establecer la conexión");
                }
            } catch (SQLException e) {
                System.out.println("Error al eliminar: " + e);
            }
        }*/
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroContenedoresImportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroContenedoresImportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroContenedoresImportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroContenedoresImportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroContenedoresImportacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonActualizarContenedor;
    private javax.swing.JButton BotonRegistrarContenedor;
    private javax.swing.JButton BotonVolverAlMenu;
    private javax.swing.JPanel PanelContenedoresImportacion;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JPanel PanelRegistros;
    private javax.swing.JTable TablaContenedoresImportacion;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> selectDestino;
    private javax.swing.JComboBox<String> selectTipoDeCarga;
    private javax.swing.JTextField txtIDContenedor;
    private javax.swing.JTextField txtPropietario;
    // End of variables declaration//GEN-END:variables

    private void mostrardatos() {
        DefaultTableModel modelo=new DefaultTableModel();
        modelo.addColumn("ID CONTENEDOR");
        modelo.addColumn("TIPO DE CARGA");
        modelo.addColumn("DESTINO");
        modelo.addColumn("PROPIETARIO");
        TablaContenedoresImportacion.setModel(modelo);
        String consultasql="select * from contenedor where DestinoContenedor='Peru'";
        String data[]=new String[5];
        
        Statement st;
        try{
            st=CConexion.createStatement();
            ResultSet rs=st.executeQuery(consultasql);
            while(rs.next()){
                data[0]=rs.getString(1);
                data[1]=rs.getString(2);
                data[2]=rs.getString(5);
                data[3]=rs.getString(6);
                modelo.addRow(data);
            }
        } catch(SQLException e){
            System.out.println("Error al mostrar Datos "+ e);
        }
    }

    private void limpiarentradas() {       
        txtIDContenedor.setText("");
        selectDestino.setSelectedIndex(0);
        txtPropietario.setText("");
        selectTipoDeCarga.setSelectedIndex(0);      
    }

}
